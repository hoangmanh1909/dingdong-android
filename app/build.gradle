buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.neenbedankt.android-apt'
android {
    compileSdkVersion project.compileSdkVersion as int
    buildToolsVersion project.buildToolsVersion as String
    defaultConfig {
        applicationId "com.vinatti.dingdong"
        minSdkVersion 16
        targetSdkVersion project.targetSdkVersion as int
        versionCode 5
        versionName "1.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            keyAlias 'DingDong'
            keyPassword 'Vinatti123456'
            storeFile file("../keystore/keystore.jks")
            storePassword 'Vinatti123456'
        }
        release {
            keyAlias 'DingDong'
            keyPassword 'Vinatti123456'
            storeFile file("../keystore/keystore.jks")
            storePassword 'Vinatti123456'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            // signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
           // signingConfig signingConfigs.release
        }
    }
    productFlavors {
        dev {
            def API_URL = '"http://172.16.132.126:5003/"'
            def PRIVATE_KEY = '"34784DCEAD1484AA758A8C033FB0F858BDACABC7BE8FC2F5CC5AFD376AB8654A"'
            buildConfigField("String", "API_URL", API_URL)
            buildConfigField("String", "PRIVATE_KEY", PRIVATE_KEY)
        }
        staging {
            def API_URL = '"http://118.70.72.107:5003/"'
            def PRIVATE_KEY = '"34784DCEAD1484AA758A8C033FB0F858BDACABC7BE8FC2F5CC5AFD376AB8654A"'
            buildConfigField("String", "API_URL", API_URL)
            buildConfigField("String", "PRIVATE_KEY", PRIVATE_KEY)
        }
        staging_2 {
            def API_URL = '"http://222.255.250.245:5001/"'
            def PRIVATE_KEY = '"34784DCEAD1484AA758A8C033FB0F858BDACABC7BE8FC2F5CC5AFD376AB8654A"'
            buildConfigField("String", "API_URL", API_URL)
            buildConfigField("String", "PRIVATE_KEY", PRIVATE_KEY)
        }
        production {
            def API_URL = '"http://222.255.250.233:92/"'
            def PRIVATE_KEY = '"34784DCEAD1484AA758A8C033FB0F858BDACABC7BE8FC2F5CC5AFD376AB8654A"'
            buildConfigField("String", "API_URL", API_URL)
            buildConfigField("String", "PRIVATE_KEY", PRIVATE_KEY)
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }
    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "2g"
        maxProcessCount 16
    }
    configurations.all {
        // OkHttp 3.5.0+ includes the websockets API, so we need this to prevent a conflict
        exclude module: 'okhttp-ws'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':Libraries:VinattiCore')
    testCompile 'junit:junit:4.12'

    compile 'com.redmadrobot:inputmask:2.3.0'
    compile 'com.github.davidpizarro:pickerui:1.0.1'
    compile 'com.facebook.fresco:fresco:1.8.1'/* {
        exclude group: 'com.parse.bolts', module: 'bolts-applinks';
        exclude module: 'bolts-android';
        exclude group: 'com.parse.bolts', module: 'bolts-tasks';
    }*/
    compile 'com.android.support:multidex:1.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
    compile 'com.jakewharton:butterknife:8.0.1'
    compile 'cn.pedant.sweetalert:library:1.3'
    compile 'com.roughike:bottom-bar:2.3.1'
    //compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'
    compile 'com.codewaves.stickyheadergrid:stickyheadergrid:0.9.6'
    compile 'com.github.drawers:SpinnerDatePicker:1.0.6'
    compile 'com.github.rey5137:material:1.2.4'
    compile 'com.intuit.sdp:sdp-android:1.0.4'
    compile 'com.github.gcacace:signature-pad:1.2.1'
    compile 'me.dm7.barcodescanner:zxing:1.9.8'
    compile 'me.dm7.barcodescanner:zbar:1.9.8'
    compile 'com.google.android.gms:play-services-maps:15.0.0'
    compile 'com.google.android.gms:play-services-location:15.0.0'
    compile 'com.google.android.gms:play-services-places:15.0.0'
    compile 'com.google.firebase:firebase-messaging:15.0.0'
    //PagerSlidingTab
    compile 'com.jpardogo.materialtabstrip:library:1.1.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true;
    }
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.roughike:bottom-bar:2.3.1'
}
apply plugin: 'com.google.gms.google-services'